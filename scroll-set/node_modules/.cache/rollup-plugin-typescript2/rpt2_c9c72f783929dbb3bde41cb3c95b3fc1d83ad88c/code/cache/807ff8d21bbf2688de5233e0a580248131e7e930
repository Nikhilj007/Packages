{"code":"import React, { useEffect, useRef, useState } from 'react';\nimport './Scrollset.css';\nconst Scrollset = ({ list, SelectedColor }) => {\n    const ulRef = useRef(null);\n    const [selected, setSelected] = useState(\"\");\n    const handlescroll = () => {\n        const scrollLeft = ulRef?.current?.scrollLeft || 0;\n        const clientWidth = ulRef?.current?.clientWidth || 0;\n        const scrollWidth = ulRef?.current?.scrollWidth || 0;\n        // Calculate the middle position of the scrollable container\n        const middle = scrollLeft + clientWidth / 2;\n        // Calculate the width of each item in the list\n        const itemWidth = scrollWidth / list.length;\n        // Calculate the index of the selected item\n        const selected = Math.floor(middle / itemWidth);\n        console.log(\"scrollLeft\", scrollLeft, \"clientWidth\", clientWidth, \"scrollWidth\", scrollWidth, \"middle\", middle, \"itemWidth\", itemWidth, \"selected\", selected);\n        setSelected(list[selected]);\n        console.log(list[selected]);\n    };\n    const renderListItems = (list) => {\n        return list.map((item, index) => (React.createElement(\"li\", { key: index, className: `li`, style: selected === item ? { backgroundColor: SelectedColor, color: 'white' } : {} }, item)));\n    };\n    useEffect(() => {\n        if (ulRef.current) {\n            ulRef.current.scrollLeft = ulRef.current.scrollWidth / 2 - ulRef.current.offsetWidth / 2;\n        }\n    }, [list]);\n    return (React.createElement(\"div\", { className: 'main' },\n        React.createElement(\"ul\", { onScroll: handlescroll, className: 'ul' }, renderListItems(list))));\n};\nexport default Scrollset;\n","references":["C:/Users/Danja/Desktop/Packages/scroll-set/node_modules/@types/react/index.d.ts"],"dts":{"name":"C:/Users/Danja/Desktop/Packages/scroll-set/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Scrollset.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport './Scrollset.css';\ndeclare const Scrollset: ({ list, SelectedColor }: {\n    list: string[];\n    SelectedColor: string;\n}) => React.JSX.Element;\nexport default Scrollset;\n"}}
